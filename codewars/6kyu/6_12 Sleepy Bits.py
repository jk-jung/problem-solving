def sleep(v):
    i = min(range(12), key=lambda i: (v[i:] + v[:i])[::-1])
    return '0' * i + '1' + '0' * (11 - i)

def sleep2(s):
    dd = {
        '110011001111': '000000001000',
        '011011011111': '000000010000',
        '101110101111': '000000001000',
        '110111101111': '000000001000',
        '011110111111': '000000100000',
        '011101010111': '000000000100',
        '011001001110': '000000001000',
        '101111011111': '000000010000',
        '110111010101': '000000000001',
        '001011001101': '001000000000',
        '100110010010': '000000000010',
        '011011111111': '000010000000',
        '110011001010': '000000001000',
        '110101101011': '000000000010',
        '110110111110': '000000100000',
        '100011010001': '000000000001',
        '111011010111': '000000000100',
        '010110101011': '000000000010',
        '110011010010': '000000000010',
        '100101111001': '000100000000',
        '111100110011': '000000000010',
        '001011110011': '001000000000',
        '110100011000': '000000010000',
        '010110001100': '010000000000',
        '111110110111': '000000000100',
        '101101011111': '000000010000',
        '101110101011': '000000000010',
        '111101010110': '000000000100',
        '001110100111': '000000000100',
        '100101001100': '000100000000',
        '111111011101': '000000000001',
        '100101001010': '000000001000',
        '110111101101': '000000000001',
        '011110011001': '000000000001',
        '110010010100': '000000010000',
        '100111001111': '000000001000',
        '111011011111': '000000010000',
        '110110111101': '000000100000',
        '110100101100': '000000100000',
        '011110101011': '000000000010',
        '101101010101': '000000000001',
        '100100101001': '000000100000',
        '111001010010': '000000000010',
        '111001100101': '000000000100',
        '111101101111': '000000001000',
        '011001100101': '000000000100',
        '110011100101': '000000000100',
        '111010011100': '000000010000',
        '011010101011': '000000000010',
        '011100111110': '000000100000',
        '010110101111': '000000001000',
        '110111010111': '000000000100',
        '011011111011': '000010000000',
        '011101011011': '000000010000',

        '100110011011': '000000010000',
        '010100101110': '000000100000',
        '100110110011': '000000000010',
        '101110111111': '000000100000',
        '010011001001': '000000000001',
        '101110011001': '000000000001',
        '110110110111': '000000000100',
        '111001111100': '000001000000',
        '101101110101': '000000000001',
        '011010001100': '000000001000',
        '110111110110': '000100000000',
        '100011000111': '000000000100',
        '111101101101': '000000000001',
        '010010110011': '000010000000',
        '111011101111': '000000001000',
        '110010011100': '000000010000',
        '010111100110': '010000000000',
        '111110110101': '000000000001',
        '101111001100': '100000000000',
        '100110100101': '000000000100',
        '101101111101': '000001000000',
        '110111101110': '000100000000',
        '110001011000': '000001000000',
        '110101011010': '000000010000',
        '110110101101': '000000001000',
        '111101110101': '000000000001',
        '011001010110': '000001000000',
        '101011001100': '100000000000',
        '101101101111': '000000001000',
        '111111010110': '000000000100',
        '110011010011': '000000000010',
        '001101001111': '000000001000',
        '001111010011': '000000000010',
        '101111010111': '000000000100',
        '101101011110': '000000010000',
        '011101011111': '000000010000',
        '101100110010': '000000000010',
        '001100100111': '000000000100',
        '101101011101': '000000010000',
        '100011000101': '000000000100',
        '101111110101': '000000000001',
        '101111010101': '000000000001',
        '011010111011': '000000100000',
        '010110011010': '010000000000',
        '110110101011': '000000000010',
        '110111111110': '000100000000',
        '011111101011': '000000000010',
        '101101111011': '000001000000',
        '011001001010': '000000001000',
        '111011101011': '000000000010',
        '110111011110': '000100000000',
        '111001110011': '000000000010',
        '011011101111': '000010000000',
        '100101110011': '000100000000',
        '110111101011': '000000000010',
        '101111011011': '000000000010',
        '001001010011': '000001000000',
    }
    if s in dd:
        print('@' * 100)
        return dd[s]

    r = (-1, -1, -1)
    for i, x in enumerate(s):
        if x == '1':
            t = i - 1
            c, d = 0, 0
            while s[t] == '0':
                c += 1
                t -= 1
            t = i + 1
            while s[t % len(s)] == '0':
                d += 1
                t += 1
            r = max((c, -d, -i), r)
    c = -r[-1]
    return '0' * c + '1' + '0' * (11 - c)